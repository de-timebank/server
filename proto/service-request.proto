syntax = "proto3";
package servicerequest;

service ServiceRequest {
    rpc create (Create.Request) returns (Create.Response);
    rpc getById (GetById.Request) returns (GetById.Response);
    rpc delete (Delete.Request) returns (Delete.Response);
    rpc placeBid (PlaceBid.Request) returns (PlaceBid.Response);
    rpc deleteBid (DeleteBid.Request) returns (DeleteBid.Response);
    rpc getRatingById (GetRatingById.Request) returns (GetRatingById.Response);
    rpc placeRating (PlaceRating.Request) returns (PlaceRating.Response);
}

message ServiceRequestBid {
    string id = 1;
    string bidder = 2;
    uint32 amount = 3;
    string request_id = 4;
    string created_at = 5;
}

message ServiceRequestData {    

    message Details {
        message Coordinate {
            string latitude = 1;
            string longitude = 2;
        }

        message Location {
            string name = 1;
            Coordinate coordinate = 2;
        }

        string title = 1;
        string description = 2;
        Location location = 3;
    }

    enum State {
        PENDING = 0;
        ACCEPTED = 1;
        ONGOING = 2;
        COMPLETED = 3;
        ABORTED = 4;
    }


    string id = 1;
    string requestor = 2;
    optional string provider = 3;
    State state = 4;
    Details details = 5;
    repeated string media_attachments = 6;
    float rate = 7;
    ServiceRequestBid accepted_bid = 8;
    string created_at = 9;
    string updated_at = 10;
}

message Create {
    message Payload {
        ServiceRequestData.Details details = 1;
        float rate = 2;
        repeated string media_attachments = 3;
        string requestor = 4;
    }

    message Request {
        Payload payload = 1;
        // string auth_token = 3;
    }

    message Response {
        ServiceRequestData request = 1;
    }
}

message Delete {
    message Payload {
        string request_id = 1;
    }

    message Request {
        Payload payload = 1;
    }

    message Response {
    }
}

message GetById {
    message Payload {
        string request_id = 1;
    }
    
    message Request {
        Payload payload = 1;
    }
    
    message Response {
        ServiceRequestData request = 1;
    }
}

message PlaceBid {
    message Payload {
        string request_id = 1;
        string bidder = 2;
        uint32 amount = 3;
    }

    message Request {
        Payload payload = 1;
    }

    message Response {
        ServiceRequestBid bid = 1;
    }
}

message DeleteBid {
    message Payload {
        string bid_id = 1;
    }   

    message Request {
        Payload payload = 1;
    }

    message Response {
    }
}

message ServiceRating {
    string id = 1;
    string author = 2;
    int32 value = 3;
    string comment = 4;
    string created_at = 5;
    string updated_at = 6;
    string request_id = 7;
    string recipient = 8;
}

message GetRatingById {
    message Payload {
        string request_id = 1;
    }

    message Request {
        Payload payload = 1;
    }

    message Response {
        ServiceRating rating = 1;
    }
}

message PlaceRating {
    message Payload {
        string author = 1;
        int32 value = 2;
        string comment = 3;
        string request_id = 4;
        string recipient =  5;
    }

    message Request {
        Payload payload = 1;
    }

    message Response {
        ServiceRating rating = 1;
    }
}

